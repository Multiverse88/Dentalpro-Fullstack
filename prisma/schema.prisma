// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime? @map(name: "email_verified")
  password      String
  role          String    @default("USER")
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

// Patient model
model Patient {
  id          String     @id @default(cuid())
  name        String
  dateOfBirth DateTime   @map(name: "date_of_birth")
  gender      String
  contact     String
  address     String?
  createdAt   DateTime   @default(now()) @map(name: "created_at")
  updatedAt   DateTime   @updatedAt @map(name: "updated_at")
  teeth       Tooth[]
  treatments  Treatment[]

  @@map(name: "patients")
}

// Tooth model
model Tooth {
  id        String   @id @default(cuid())
  number    Int
  status    String
  patientId String   @map(name: "patient_id")
  patient   Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "teeth")
}

// Treatment model
model Treatment {
  id          String   @id @default(cuid())
  date        DateTime
  description String
  type        String?
  patientId   String   @map(name: "patient_id")
  patient     Patient  @relation(fields: [patientId], references: [id], onDelete: Cascade)
  teeth       Json     // Array of tooth numbers
  notes       String?
  cost        Float?
  performedBy String?  @map(name: "performed_by")
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "treatments")
}
